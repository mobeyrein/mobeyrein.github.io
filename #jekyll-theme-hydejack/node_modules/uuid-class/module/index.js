const t=t=>t instanceof ArrayBuffer?new Uint8Array(t):new Uint8Array(t.buffer,t.byteOffset,t.byteLength),e=t,n=t=>parseInt(t,16);function r(t){const n=(r=t,Array.from(e(r),(t=>(t=>t.toString(16).padStart(2,"0"))(t))));var r;return n.splice(4,0,"-"),n.splice(7,0,"-"),n.splice(10,0,"-"),n.splice(13,0,"-"),n.join("")}function o(){const t=crypto.getRandomValues(new Uint8Array(16));return t[6]=15&t[6]|64,t[8]=63&t[8]|128,t.buffer}function s(t){const e=t.replace(/[^0-9a-f]/gi,"").slice(0,32);if(e.length<32)throw Error("UUID too short");return(r=e,new Uint8Array(r.match(/[0-9a-f]{1,2}/gi).map(n))).buffer;var r}async function i(e,n){const r="string"==typeof e?(o=e,o=unescape(encodeURIComponent(o)),(new TextEncoder).encode(o)):t(e);var o;const s="string"==typeof n?new c(n):n,i=new Uint8Array(await crypto.subtle.digest("SHA-1",function(...t){const e=t.reduce(((t,e)=>t+e.length),0),n=new Uint8Array(e);let r=0;for(const e of t)n.set(e,r),r+=e.length;return n}(s,r)));return i[6]=15&i[6]|80,i[8]=63&i[8]|128,i.buffer.slice(0,16)}class c extends Uint8Array{static v4(){return new c(o())}static async v5(t,e){return new c(await i(t,e))}constructor(t,e){if(null==t)super(o());else if("string"==typeof t)super(s(t));else if(t instanceof c)super(t.buffer.slice(0));else{const n=t instanceof ArrayBuffer||t instanceof SharedArrayBuffer?new Uint8Array(t,null!=e?e:0,16):new Uint8Array(t);if(n.length<16)throw Error("UUID too short");super(n.buffer.slice(0,16))}}get id(){return r(this)}get uuid(){return r(this)}toString(){return r(this)}toJSON(){return r(this)}static get[Symbol.species](){return Uint8Array}}const u=Symbol.for("nodejs.util.inspect.custom"),f="undefined"!=typeof Deno?"symbols"in Deno?Deno.symbols.customInspect:Deno.customInspect:Symbol();c.prototype[u]=function(){return`UUID [ ${this.uuid} ]`},c.prototype[f]=function(){return`UUID [ ${this.uuid} ]`};export{c as UUID};
//# sourceMappingURL=index.js.map
